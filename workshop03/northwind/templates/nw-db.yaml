---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysqldb-pvc
  namespace: {{ include "nw.namespace" . }}
  annotations:
    volume.beta.kubernetes.io/storage-provisioner: {{ .Values.storage.provisioner }}
  
spec:
  accessModes:
    - {{ .Values.storage.accessmodes }}
  resources:
    requests:
      storage: {{ .Values.storage.storagesize }}
  storageClassName: {{ .Values.storage.classname }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysqldb-deploy
  namespace: {{ include "nw.namespace" . }}
  labels:
    name: mysqldb-deploy
    version: {{ .Values.nw.version }}
spec:
  replicas: {{ .Values.replicaCount.nwdb.count }}
  minReadySeconds: 60
  selector:
    matchLabels:
      name: mysqldb-pod
  template:
    metadata:
      name: mysqldb-pod
      labels:
        name: mysqldb-pod
    spec:
      volumes:
        - name: data-volume 
          persistentVolumeClaim:
            claimName: mysqldb-pvc
      initContainers:
        - name: scrub
          image: busybox
          command: ["/bin/sh", "-c", "test -e /scrub && rm -rf /scrub/..?* /scrub/.[!.]* /scrub/*  && test -z \"$(ls -A /scrub)\" || exit 1"]
          volumeMounts:
            - mountPath: /scrub
              name: data-volume
      containers:
      - name: mysqldb-container
        image: "{{ .Values.image.nwdb.name }}:{{ .Values.image.nwdb.version }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        livenessProbe:
              exec:
                command: 
                - bash 
                - "-c" 
                - | 
                  mysqladmin ping -uroot -p${MYSQL_ROOT_PASSWORD} | grep alive || exit
              timeoutSeconds: 5
              failureThreshold: 3
              successThreshold: 1
        volumeMounts:
          - mountPath: /var/lib/mysql
            name: data-volume
        env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nw-secret
                  key: db_password
        ports:
          - name: mysqldb-port
            containerPort: {{ .Values.service.port.nwdb }}
---
kind: Service
apiVersion: v1
metadata:
  name: mysqldb-svc
  namespace: {{ include "nw.namespace" . }}
  labels:
    name: mysqldb-svc
    version: v1
spec:
  type:  ClusterIP
  selector:
    name:  mysqldb-pod
  ports:
  - name:  mysqldb-svc-port
    port:  {{ .Values.service.port.nwdb }}
    targetPort:  mysqldb-port
